package com.example.demo.util;

import lombok.Getter;
import lombok.ToString;

@Getter
@ToString
public class Pagination {

	private int page;
	private int totalRows;
	private int rowsPerPage;
	private int pagesPerBlock;
	private int totalPages;
	private int totalBlocks;
	private int currentBlock;
	private int begin;
	private int end;
	private int beginPage;
	private int endPage;
	private boolean isFirst;
	private boolean isLast;
	private int prevPage;
	private int nextPage;
	
	public Pagination(int page, int totalRows) {
		this.page = page;
		this.totalRows = totalRows;
		this.rowsPerPage = 10;
		this.pagesPerBlock = 5;
		init();
	}
	
	public Pagination(int page, int totalRows, int rowsPerPage) {
		this.page = page;
		this.totalRows = totalRows;
		this.rowsPerPage = rowsPerPage;
		this.pagesPerBlock = 5;
		init();
	}
	
	public Pagination(int page, int totalRows, int rowsPerPage, int pagesPerBlock) {
		this.page = page;
		this.totalRows = totalRows;
		this.rowsPerPage = rowsPerPage;
		this.pagesPerBlock = pagesPerBlock;
		init();
	}
	
	private void init() {
		if (totalRows > 0) {
			if (page <= 0) {
				page = 1;
			}
			totalPages = (int) Math.ceil((double)totalRows/rowsPerPage);
			if (page >= totalPages) {
				page = totalPages;
			}
			
			begin = (page - 1)*rowsPerPage + 1;
			end = page*rowsPerPage;
			
			totalBlocks = (int) Math.ceil((double)totalPages/pagesPerBlock);
			currentBlock = (int) Math.ceil((double)page/pagesPerBlock);
			
			beginPage = (currentBlock - 1)*pagesPerBlock + 1;
			endPage = currentBlock*pagesPerBlock;
			if (currentBlock == totalBlocks) {
				endPage = totalPages;
			}
			
			isFirst = page == 1;
			isLast = page == totalPages;
			
			prevPage = page - 1;
			nextPage = page + 1;
		} 
	}
}
